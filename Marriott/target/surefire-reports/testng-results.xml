<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/farjanamobin/IdeaProjects/WebAutomationFramework_Team1/Marriott/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite started-at="2020-09-26T02:27:47 EDT" name="Marriott Automation Test" finished-at="2020-09-26T02:31:31 EDT" duration-ms="223740">
    <groups>
    </groups>
    <test started-at="2020-09-26T02:27:47 EDT" name="Marriott Home" finished-at="2020-09-26T02:31:31 EDT" duration-ms="223740">
      <class name="home.MarriottHomePageTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:27:47 EDT" name="extentSetup" finished-at="2020-09-26T02:27:47 EDT" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@34332b8d]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/farjanamobin/IdeaProjects/WebAutomationFramework_Team1/Marriott/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:27:47 EDT" name="setUp" finished-at="2020-09-26T02:27:56 EDT" duration-ms="9311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.marriott.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:27:56 EDT" name="startExtent" finished-at="2020-09-26T02:27:56 EDT" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.MarriottHomePageTest.testAndValidateAdultGuestNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:27:56 EDT" name="getInit" finished-at="2020-09-26T02:27:56 EDT" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateAdultGuestNumber()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:27:56 EDT" name="testAndValidateAdultGuestNumber" finished-at="2020-09-26T02:28:08 EDT" duration-ms="11507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateAdultGuestNumber -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:08 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:28:09 EDT" duration-ms="1067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateAdultGuestNumber status=SUCCESS method=MarriottHomePageTest.testAndValidateAdultGuestNumber()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:09 EDT" name="cleanUp" finished-at="2020-09-26T02:28:09 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:09 EDT" name="setUp" finished-at="2020-09-26T02:28:20 EDT" duration-ms="10725" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.marriott.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:20 EDT" name="startExtent" finished-at="2020-09-26T02:28:20 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.MarriottHomePageTest.testAndValidateCalendar()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:20 EDT" name="getInit" finished-at="2020-09-26T02:28:20 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateCalendar()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:20 EDT" name="testAndValidateCalendar" finished-at="2020-09-26T02:28:30 EDT" duration-ms="9814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateCalendar -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:30 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:28:30 EDT" duration-ms="261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateCalendar status=SUCCESS method=MarriottHomePageTest.testAndValidateCalendar()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:30 EDT" name="cleanUp" finished-at="2020-09-26T02:28:30 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:30 EDT" name="setUp" finished-at="2020-09-26T02:28:36 EDT" duration-ms="6611" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.marriott.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:36 EDT" name="startExtent" finished-at="2020-09-26T02:28:36 EDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.MarriottHomePageTest.testAndValidateChildGuest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:36 EDT" name="getInit" finished-at="2020-09-26T02:28:36 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateChildGuest()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:36 EDT" name="testAndValidateChildGuest" finished-at="2020-09-26T02:28:41 EDT" duration-ms="4292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateChildGuest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:41 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:28:41 EDT" duration-ms="239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateChildGuest status=SUCCESS method=MarriottHomePageTest.testAndValidateChildGuest()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:41 EDT" name="cleanUp" finished-at="2020-09-26T02:28:41 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:41 EDT" name="setUp" finished-at="2020-09-26T02:28:48 EDT" duration-ms="7263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.marriott.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:48 EDT" name="startExtent" finished-at="2020-09-26T02:28:48 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.MarriottHomePageTest.testAndValidateDestinationBox() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:48 EDT" name="getInit" finished-at="2020-09-26T02:28:48 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateDestinationBox()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:28:48 EDT" name="testAndValidateDestinationBox" finished-at="2020-09-26T02:29:00 EDT" duration-ms="11968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateDestinationBox -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:00 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:29:00 EDT" duration-ms="239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateDestinationBox status=SUCCESS method=MarriottHomePageTest.testAndValidateDestinationBox()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:00 EDT" name="cleanUp" finished-at="2020-09-26T02:29:00 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:00 EDT" name="setUp" finished-at="2020-09-26T02:29:09 EDT" duration-ms="8518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.marriott.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:09 EDT" name="startExtent" finished-at="2020-09-26T02:29:09 EDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.MarriottHomePageTest.testAndValidateDeutsch()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:09 EDT" name="getInit" finished-at="2020-09-26T02:29:09 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateDeutsch()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:09 EDT" name="testAndValidateDeutsch" finished-at="2020-09-26T02:29:19 EDT" duration-ms="9912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateDeutsch -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:19 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:29:19 EDT" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateDeutsch status=SUCCESS method=MarriottHomePageTest.testAndValidateDeutsch()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:19 EDT" name="cleanUp" finished-at="2020-09-26T02:29:19 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:19 EDT" name="setUp" finished-at="2020-09-26T02:29:26 EDT" duration-ms="6287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.marriott.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:26 EDT" name="startExtent" finished-at="2020-09-26T02:29:26 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.MarriottHomePageTest.testAndValidateEspanol()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:26 EDT" name="getInit" finished-at="2020-09-26T02:29:26 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateEspanol()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:26 EDT" name="testAndValidateEspanol" finished-at="2020-09-26T02:29:33 EDT" duration-ms="7939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateEspanol -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:33 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:29:34 EDT" duration-ms="267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateEspanol status=SUCCESS method=MarriottHomePageTest.testAndValidateEspanol()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:34 EDT" name="cleanUp" finished-at="2020-09-26T02:29:34 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:34 EDT" name="setUp" finished-at="2020-09-26T02:29:46 EDT" duration-ms="11868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.marriott.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:46 EDT" name="startExtent" finished-at="2020-09-26T02:29:46 EDT" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.MarriottHomePageTest.testAndValidateHotelFindingProcess() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:46 EDT" name="getInit" finished-at="2020-09-26T02:29:46 EDT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateHotelFindingProcess()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:29:46 EDT" name="testAndValidateHotelFindingProcess" finished-at="2020-09-26T02:30:08 EDT" duration-ms="22862" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <label for="ZMG9B3QL_useRewardsPoints" class="l-userewards-checkmark js-use-rewards">...</label> is not clickable at point (873, 11). Other element would receive the click: <a href="https://help.marriott.com/s/" class="t-control-link tile-quick-link-item t-font-s t-line-height-m l-padding-three-quarters l-display-inline-block  " data-component-id="QuickLinkItem_02_bc7e" data-component-name="quickLinkItem" data-component-endpoint="/aries-content/v1/quickLinkItem.comp">...</a>
  (Session info: chrome=85.0.4183.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Farjanas-Air', ip: '2604:2000:1700:1c:aca7:63da:436f:f5a%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '11.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /var/folders/27/nmfyzmzj1c7...}, goog:chromeOptions: {debuggerAddress: localhost:55026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: a2230185a315a17e0b9eb7c14ffadf71]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <label for="ZMG9B3QL_useRewardsPoints" class="l-userewards-checkmark js-use-rewards">...</label> is not clickable at point (873, 11). Other element would receive the click: <a href="https://help.marriott.com/s/" class="t-control-link tile-quick-link-item t-font-s t-line-height-m l-padding-three-quarters l-display-inline-block  " data-component-id="QuickLinkItem_02_bc7e" data-component-name="quickLinkItem" data-component-endpoint="/aries-content/v1/quickLinkItem.comp">...</a>
  (Session info: chrome=85.0.4183.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Farjanas-Air', ip: '2604:2000:1700:1c:aca7:63da:436f:f5a%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '11.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /var/folders/27/nmfyzmzj1c7...}, goog:chromeOptions: {debuggerAddress: localhost:55026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: a2230185a315a17e0b9eb7c14ffadf71
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at home.MarriottHomePage.checkHotelFindingProcess(MarriottHomePage.java:177)
at home.MarriottHomePageTest.testAndValidateHotelFindingProcess(MarriottHomePageTest.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateHotelFindingProcess -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:09 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:30:11 EDT" duration-ms="2528" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateHotelFindingProcess status=FAILURE method=MarriottHomePageTest.testAndValidateHotelFindingProcess()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:11 EDT" name="cleanUp" finished-at="2020-09-26T02:30:11 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:11 EDT" name="setUp" finished-at="2020-09-26T02:30:25 EDT" duration-ms="14401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.marriott.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:25 EDT" name="startExtent" finished-at="2020-09-26T02:30:25 EDT" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.MarriottHomePageTest.testAndValidateNumberOfRooms()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:25 EDT" name="getInit" finished-at="2020-09-26T02:30:25 EDT" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateNumberOfRooms()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:25 EDT" name="testAndValidateNumberOfRooms" finished-at="2020-09-26T02:30:39 EDT" duration-ms="13711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateNumberOfRooms -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:39 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:30:40 EDT" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateNumberOfRooms status=SUCCESS method=MarriottHomePageTest.testAndValidateNumberOfRooms()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:40 EDT" name="cleanUp" finished-at="2020-09-26T02:30:40 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:40 EDT" name="setUp" finished-at="2020-09-26T02:30:49 EDT" duration-ms="9334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.marriott.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:49 EDT" name="startExtent" finished-at="2020-09-26T02:30:49 EDT" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.MarriottHomePageTest.testAndValidateSpecialRate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:49 EDT" name="getInit" finished-at="2020-09-26T02:30:49 EDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateSpecialRate()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:30:49 EDT" name="testAndValidateSpecialRate" finished-at="2020-09-26T02:31:05 EDT" duration-ms="16277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateSpecialRate -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:05 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:31:06 EDT" duration-ms="781" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateSpecialRate status=SUCCESS method=MarriottHomePageTest.testAndValidateSpecialRate()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:06 EDT" name="cleanUp" finished-at="2020-09-26T02:31:06 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:06 EDT" name="setUp" finished-at="2020-09-26T02:31:20 EDT" duration-ms="13962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.marriott.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:20 EDT" name="startExtent" finished-at="2020-09-26T02:31:20 EDT" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.MarriottHomePageTest.testAndValidateUsePointCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:20 EDT" name="getInit" finished-at="2020-09-26T02:31:20 EDT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateUsePointCheckBox()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:20 EDT" name="testAndValidateUsePointCheckBox" finished-at="2020-09-26T02:31:30 EDT" duration-ms="10092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateUsePointCheckBox -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:30 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:31:31 EDT" duration-ms="538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateUsePointCheckBox status=SUCCESS method=MarriottHomePageTest.testAndValidateUsePointCheckBox()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:31 EDT" name="cleanUp" finished-at="2020-09-26T02:31:31 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:home.MarriottHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:31 EDT" name="generateReport" finished-at="2020-09-26T02:31:31 EDT" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- home.MarriottHomePageTest -->
    </test> <!-- Marriott Home -->
  </suite> <!-- Marriott Automation Test -->
</testng-results>
