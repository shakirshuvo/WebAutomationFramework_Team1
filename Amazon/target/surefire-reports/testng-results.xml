<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="7" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Study\Selenium\Selenium\Frameworks\WebAutomationFramework_Team1\Amazon\target\surefire-reports\html]]>
    </line>
    <line>
      <![CDATA[SearchTest: test Search Multiple Items]]>
    </line>
    <line>
      <![CDATA[SearchTest: test Search Single Item]]>
    </line>
    <line>
      <![CDATA[SearchTest: test Validate All Drop Down]]>
    </line>
    <line>
      <![CDATA[SearchTest: test Validate Search Items From My SQL]]>
    </line>
    <line>
      <![CDATA[SearchTest: test Verify Purell Text Is Displayed]]>
    </line>
    <line>
      <![CDATA[SearchTest: test Verify Search Random Books By Title]]>
    </line>
    <line>
      <![CDATA[SearchTest: test Verify Search Random Books By URL]]>
    </line>
  </reporter-output>
  <suite started-at="2020-08-31T21:16:08 PDT" name="Amazon Automation Test" finished-at="2020-08-31T21:17:32 PDT" duration-ms="83437">
    <groups>
    </groups>
    <test started-at="2020-08-31T21:16:08 PDT" name="Amazon Home" finished-at="2020-08-31T21:17:32 PDT" duration-ms="83437">
      <class name="search.SearchTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:08 PDT" name="extentSetup" finished-at="2020-08-31T21:16:08 PDT" duration-ms="268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7061622]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Study\Selenium\Selenium\Frameworks\WebAutomationFramework_Team1\Amazon\target\surefire-reports\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:08 PDT" name="setUp" finished-at="2020-08-31T21:16:14 PDT" duration-ms="6303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:14 PDT" name="startExtent" finished-at="2020-08-31T21:16:14 PDT" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testSearchMultipleItems()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:14 PDT" name="getInit" finished-at="2020-08-31T21:16:15 PDT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testSearchMultipleItems()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:15 PDT" name="testSearchMultipleItems" finished-at="2020-08-31T21:16:19 PDT" duration-ms="4769" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SearchTest: test Search Multiple Items]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSearchMultipleItems -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:19 PDT" name="afterEachTestMethod" finished-at="2020-08-31T21:16:21 PDT" duration-ms="1615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchMultipleItems status=SUCCESS method=SearchTest.testSearchMultipleItems()[pri:0, instance:search.SearchTest@140c9f39] output=SearchTest: test Search Multiple Items]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:21 PDT" name="cleanUp" finished-at="2020-08-31T21:16:21 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:21 PDT" name="setUp" finished-at="2020-08-31T21:16:26 PDT" duration-ms="5402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:26 PDT" name="startExtent" finished-at="2020-08-31T21:16:26 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testSearchSingleItem()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:26 PDT" name="getInit" finished-at="2020-08-31T21:16:26 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testSearchSingleItem()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:26 PDT" name="testSearchSingleItem" finished-at="2020-08-31T21:16:29 PDT" duration-ms="3073" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SearchTest: test Search Single Item]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSearchSingleItem -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:29 PDT" name="afterEachTestMethod" finished-at="2020-08-31T21:16:31 PDT" duration-ms="1474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchSingleItem status=SUCCESS method=SearchTest.testSearchSingleItem()[pri:0, instance:search.SearchTest@140c9f39] output=SearchTest: test Search Single Item]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:31 PDT" name="cleanUp" finished-at="2020-08-31T21:16:31 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:31 PDT" name="setUp" finished-at="2020-08-31T21:16:36 PDT" duration-ms="5021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:36 PDT" name="startExtent" finished-at="2020-08-31T21:16:36 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testValidateAllDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:36 PDT" name="getInit" finished-at="2020-08-31T21:16:36 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testValidateAllDropDown()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:36 PDT" name="testValidateAllDropDown" finished-at="2020-08-31T21:16:36 PDT" duration-ms="102" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SearchTest: test Validate All Drop Down]]>
            </line>
          </reporter-output>
        </test-method> <!-- testValidateAllDropDown -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:36 PDT" name="afterEachTestMethod" finished-at="2020-08-31T21:16:37 PDT" duration-ms="1041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateAllDropDown status=SUCCESS method=SearchTest.testValidateAllDropDown()[pri:0, instance:search.SearchTest@140c9f39] output=SearchTest: test Validate All Drop Down]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:37 PDT" name="cleanUp" finished-at="2020-08-31T21:16:37 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:37 PDT" name="setUp" finished-at="2020-08-31T21:16:42 PDT" duration-ms="4868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:42 PDT" name="startExtent" finished-at="2020-08-31T21:16:42 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testValidateSearchItemsFromMySQL() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:42 PDT" name="getInit" finished-at="2020-08-31T21:16:42 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testValidateSearchItemsFromMySQL()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:42 PDT" name="testValidateSearchItemsFromMySQL" finished-at="2020-08-31T21:16:57 PDT" duration-ms="14636" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SearchTest: test Validate Search Items From My SQL]]>
            </line>
          </reporter-output>
        </test-method> <!-- testValidateSearchItemsFromMySQL -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:57 PDT" name="afterEachTestMethod" finished-at="2020-08-31T21:16:57 PDT" duration-ms="910" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateSearchItemsFromMySQL status=SUCCESS method=SearchTest.testValidateSearchItemsFromMySQL()[pri:0, instance:search.SearchTest@140c9f39] output=SearchTest: test Validate Search Items From My SQL]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:57 PDT" name="cleanUp" finished-at="2020-08-31T21:16:57 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:16:57 PDT" name="setUp" finished-at="2020-08-31T21:17:02 PDT" duration-ms="4923" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:02 PDT" name="getInit" finished-at="2020-08-31T21:17:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:02 PDT" name="startExtent" finished-at="2020-08-31T21:17:02 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testVerifyPurellTextIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testVerifyPurellTextIsDisplayed()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:02 PDT" name="testVerifyPurellTextIsDisplayed" finished-at="2020-08-31T21:17:07 PDT" duration-ms="4585" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SearchTest: test Verify Purell Text Is Displayed]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyPurellTextIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:07 PDT" name="afterEachTestMethod" finished-at="2020-08-31T21:17:08 PDT" duration-ms="1051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyPurellTextIsDisplayed status=SUCCESS method=SearchTest.testVerifyPurellTextIsDisplayed()[pri:0, instance:search.SearchTest@140c9f39] output=SearchTest: test Verify Purell Text Is Displayed]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:08 PDT" name="cleanUp" finished-at="2020-08-31T21:17:08 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:08 PDT" name="setUp" finished-at="2020-08-31T21:17:13 PDT" duration-ms="5248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:13 PDT" name="startExtent" finished-at="2020-08-31T21:17:13 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testVerifySearchRandomBooksByTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:13 PDT" name="getInit" finished-at="2020-08-31T21:17:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifySearchRandomBooksByTitle()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:13 PDT" name="testVerifySearchRandomBooksByTitle" finished-at="2020-08-31T21:17:18 PDT" duration-ms="4661" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SearchTest: test Verify Search Random Books By Title]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifySearchRandomBooksByTitle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:18 PDT" name="afterEachTestMethod" finished-at="2020-08-31T21:17:19 PDT" duration-ms="857" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifySearchRandomBooksByTitle status=SUCCESS method=SearchTest.testVerifySearchRandomBooksByTitle()[pri:0, instance:search.SearchTest@140c9f39] output=SearchTest: test Verify Search Random Books By Title]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:19 PDT" name="cleanUp" finished-at="2020-08-31T21:17:19 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:19 PDT" name="setUp" finished-at="2020-08-31T21:17:25 PDT" duration-ms="5995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:25 PDT" name="startExtent" finished-at="2020-08-31T21:17:25 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testVerifySearchRandomBooksByURL()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:25 PDT" name="getInit" finished-at="2020-08-31T21:17:25 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifySearchRandomBooksByURL()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:25 PDT" name="testVerifySearchRandomBooksByURL" finished-at="2020-08-31T21:17:30 PDT" duration-ms="5115" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SearchTest: test Verify Search Random Books By URL]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifySearchRandomBooksByURL -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:30 PDT" name="afterEachTestMethod" finished-at="2020-08-31T21:17:32 PDT" duration-ms="1604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifySearchRandomBooksByURL status=SUCCESS method=SearchTest.testVerifySearchRandomBooksByURL()[pri:0, instance:search.SearchTest@140c9f39] output=SearchTest: test Verify Search Random Books By URL]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:32 PDT" name="cleanUp" finished-at="2020-08-31T21:17:32 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:search.SearchTest@140c9f39]" started-at="2020-08-31T21:17:33 PDT" name="generateReport" finished-at="2020-08-31T21:17:33 PDT" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- search.SearchTest -->
    </test> <!-- Amazon Home -->
  </suite> <!-- Amazon Automation Test -->
</testng-results>
