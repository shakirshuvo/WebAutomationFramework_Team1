<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="8" total="51" passed="39" failed="4" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Study\Selenium\Selenium\Frameworks\WebAutomationFramework_Team1\Amazon\target\surefire-reports\html]]>
    </line>
  </reporter-output>
  <suite started-at="2020-08-30T19:01:56 PDT" name="Surefire suite" finished-at="2020-08-30T19:09:33 PDT" duration-ms="457525">
    <groups>
    </groups>
    <test started-at="2020-08-30T19:01:56 PDT" name="Surefire test" finished-at="2020-08-30T19:09:33 PDT" duration-ms="457525">
      <class name="signIn.SignInTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:31 PDT" name="setUp" finished-at="2020-08-30T19:08:37 PDT" duration-ms="5824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:37 PDT" name="getInit" finished-at="2020-08-30T19:08:37 PDT" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:37 PDT" name="startExtent" finished-at="2020-08-30T19:08:37 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void signIn.SignInTest.testVerifyEnterYourEmailOrMobilePhoneNumberAlertIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testVerifyEnterYourEmailOrMobilePhoneNumberAlertIsDisplayed()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:37 PDT" name="testVerifyEnterYourEmailOrMobilePhoneNumberAlertIsDisplayed" finished-at="2020-08-30T19:08:38 PDT" duration-ms="1387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyEnterYourEmailOrMobilePhoneNumberAlertIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:38 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:08:39 PDT" duration-ms="1222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyEnterYourEmailOrMobilePhoneNumberAlertIsDisplayed status=SUCCESS method=SignInTest.testVerifyEnterYourEmailOrMobilePhoneNumberAlertIsDisplayed()[pri:0, instance:signIn.SignInTest@5b94b04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:39 PDT" name="cleanUp" finished-at="2020-08-30T19:08:39 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:39 PDT" name="setUp" finished-at="2020-08-30T19:08:45 PDT" duration-ms="5864" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testVerifyEnterYourPasswordAlertIsDisplayed()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:45 PDT" name="testVerifyEnterYourPasswordAlertIsDisplayed" finished-at="2020-08-30T19:08:48 PDT" duration-ms="2495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyEnterYourPasswordAlertIsDisplayed -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:45 PDT" name="getInit" finished-at="2020-08-30T19:08:45 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:45 PDT" name="startExtent" finished-at="2020-08-30T19:08:45 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void signIn.SignInTest.testVerifyEnterYourPasswordAlertIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:48 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:08:48 PDT" duration-ms="871" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyEnterYourPasswordAlertIsDisplayed status=SUCCESS method=SignInTest.testVerifyEnterYourPasswordAlertIsDisplayed()[pri:0, instance:signIn.SignInTest@5b94b04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:48 PDT" name="cleanUp" finished-at="2020-08-30T19:08:48 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:48 PDT" name="setUp" finished-at="2020-08-30T19:08:54 PDT" duration-ms="5315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:54 PDT" name="startExtent" finished-at="2020-08-30T19:08:54 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void signIn.SignInTest.testVerifyForgotYourPasswordTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testVerifyForgotYourPasswordTitle()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:54 PDT" name="testVerifyForgotYourPasswordTitle" finished-at="2020-08-30T19:08:57 PDT" duration-ms="2950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyForgotYourPasswordTitle -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:54 PDT" name="getInit" finished-at="2020-08-30T19:08:54 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:57 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:08:58 PDT" duration-ms="875" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyForgotYourPasswordTitle status=SUCCESS method=SignInTest.testVerifyForgotYourPasswordTitle()[pri:0, instance:signIn.SignInTest@5b94b04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:58 PDT" name="setUp" finished-at="2020-08-30T19:09:03 PDT" duration-ms="5795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:08:58 PDT" name="cleanUp" finished-at="2020-08-30T19:08:58 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:03 PDT" name="startExtent" finished-at="2020-08-30T19:09:03 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void signIn.SignInTest.testVerifyIncorrectPhoneNumberAlertIsDispalyed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:03 PDT" name="getInit" finished-at="2020-08-30T19:09:03 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyIncorrectPhoneNumberAlertIsDispalyed()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:03 PDT" name="testVerifyIncorrectPhoneNumberAlertIsDispalyed" finished-at="2020-08-30T19:09:06 PDT" duration-ms="2265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyIncorrectPhoneNumberAlertIsDispalyed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:06 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:09:07 PDT" duration-ms="1738" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyIncorrectPhoneNumberAlertIsDispalyed status=SUCCESS method=SignInTest.testVerifyIncorrectPhoneNumberAlertIsDispalyed()[pri:0, instance:signIn.SignInTest@5b94b04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:07 PDT" name="cleanUp" finished-at="2020-08-30T19:09:07 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:07 PDT" name="setUp" finished-at="2020-08-30T19:09:13 PDT" duration-ms="5892" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testVerifyThatErrorIsDisplayedWhenLoggingInWithInvalidEmailAddressFormat()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:13 PDT" name="testVerifyThatErrorIsDisplayedWhenLoggingInWithInvalidEmailAddressFormat" finished-at="2020-08-30T19:09:16 PDT" duration-ms="2381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyThatErrorIsDisplayedWhenLoggingInWithInvalidEmailAddressFormat -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:13 PDT" name="startExtent" finished-at="2020-08-30T19:09:13 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void signIn.SignInTest.testVerifyThatErrorIsDisplayedWhenLoggingInWithInvalidEmailAddressFormat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:13 PDT" name="getInit" finished-at="2020-08-30T19:09:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:16 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:09:17 PDT" duration-ms="1090" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyThatErrorIsDisplayedWhenLoggingInWithInvalidEmailAddressFormat status=SUCCESS method=SignInTest.testVerifyThatErrorIsDisplayedWhenLoggingInWithInvalidEmailAddressFormat()[pri:0, instance:signIn.SignInTest@5b94b04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:17 PDT" name="setUp" finished-at="2020-08-30T19:09:22 PDT" duration-ms="5236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:17 PDT" name="cleanUp" finished-at="2020-08-30T19:09:17 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:22 PDT" name="startExtent" finished-at="2020-08-30T19:09:22 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void signIn.SignInTest.testVerifyWeCannotFindAnAccountWithThatEmailAddressAlertIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testVerifyWeCannotFindAnAccountWithThatEmailAddressAlertIsDisplayed()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:22 PDT" name="testVerifyWeCannotFindAnAccountWithThatEmailAddressAlertIsDisplayed" finished-at="2020-08-30T19:09:25 PDT" duration-ms="2554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyWeCannotFindAnAccountWithThatEmailAddressAlertIsDisplayed -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:22 PDT" name="getInit" finished-at="2020-08-30T19:09:22 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:25 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:09:26 PDT" duration-ms="1043" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyWeCannotFindAnAccountWithThatEmailAddressAlertIsDisplayed status=SUCCESS method=SignInTest.testVerifyWeCannotFindAnAccountWithThatEmailAddressAlertIsDisplayed()[pri:0, instance:signIn.SignInTest@5b94b04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:26 PDT" name="cleanUp" finished-at="2020-08-30T19:09:26 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:26 PDT" name="setUp" finished-at="2020-08-30T19:09:31 PDT" duration-ms="5402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:31 PDT" name="getInit" finished-at="2020-08-30T19:09:31 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifySignInTitle()[pri:1, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:31 PDT" name="testVerifySignInTitle" finished-at="2020-08-30T19:09:32 PDT" duration-ms="1429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifySignInTitle -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:31 PDT" name="startExtent" finished-at="2020-08-30T19:09:31 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void signIn.SignInTest.testVerifySignInTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:32 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:09:33 PDT" duration-ms="821" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifySignInTitle status=SUCCESS method=SignInTest.testVerifySignInTitle()[pri:1, instance:signIn.SignInTest@5b94b04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:signIn.SignInTest@5b94b04d]" started-at="2020-08-30T19:09:33 PDT" name="cleanUp" finished-at="2020-08-30T19:09:33 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- signIn.SignInTest -->
      <class name="cart.CartTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:01:55 PDT" name="extentSetup" finished-at="2020-08-30T19:01:56 PDT" duration-ms="406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@74a680d3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Study\Selenium\Selenium\Frameworks\WebAutomationFramework_Team1\Amazon\target\surefire-reports\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:01:56 PDT" name="setUp" finished-at="2020-08-30T19:02:03 PDT" duration-ms="6808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:03 PDT" name="startExtent" finished-at="2020-08-30T19:02:03 PDT" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cart.CartTest.TestValidateAllDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:03 PDT" name="getInit" finished-at="2020-08-30T19:02:03 PDT" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="TestValidateAllDropDown()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:03 PDT" name="TestValidateAllDropDown" finished-at="2020-08-30T19:02:11 PDT" duration-ms="8051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestValidateAllDropDown -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:11 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:02:13 PDT" duration-ms="2561" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestValidateAllDropDown status=SUCCESS method=CartTest.TestValidateAllDropDown()[pri:0, instance:cart.CartTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:13 PDT" name="cleanUp" finished-at="2020-08-30T19:02:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:13 PDT" name="setUp" finished-at="2020-08-30T19:02:20 PDT" duration-ms="6278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:20 PDT" name="startExtent" finished-at="2020-08-30T19:02:20 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cart.CartTest.testCheckoutAfterAddingAnItemToCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:20 PDT" name="getInit" finished-at="2020-08-30T19:02:20 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testCheckoutAfterAddingAnItemToCart()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:20 PDT" name="testCheckoutAfterAddingAnItemToCart" finished-at="2020-08-30T19:02:27 PDT" duration-ms="7807" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at cart.Cart.verifyCheckoutAfterAddingAnItemToCart(Cart.java:236)
at cart.CartTest.testCheckoutAfterAddingAnItemToCart(CartTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:136)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:145)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckoutAfterAddingAnItemToCart -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:27 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:02:29 PDT" duration-ms="1583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckoutAfterAddingAnItemToCart status=FAILURE method=CartTest.testCheckoutAfterAddingAnItemToCart()[pri:0, instance:cart.CartTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:29 PDT" name="cleanUp" finished-at="2020-08-30T19:02:29 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:29 PDT" name="setUp" finished-at="2020-08-30T19:02:34 PDT" duration-ms="5276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:34 PDT" name="getInit" finished-at="2020-08-30T19:02:34 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:34 PDT" name="startExtent" finished-at="2020-08-30T19:02:34 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cart.CartTest.testItemAddedToCartByGoingIntoCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testItemAddedToCartByGoingIntoCart()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:34 PDT" name="testItemAddedToCartByGoingIntoCart" finished-at="2020-08-30T19:02:41 PDT" duration-ms="6588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItemAddedToCartByGoingIntoCart -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:41 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:02:42 PDT" duration-ms="932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testItemAddedToCartByGoingIntoCart status=SUCCESS method=CartTest.testItemAddedToCartByGoingIntoCart()[pri:0, instance:cart.CartTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:42 PDT" name="setUp" finished-at="2020-08-30T19:02:47 PDT" duration-ms="5590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:42 PDT" name="cleanUp" finished-at="2020-08-30T19:02:42 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:47 PDT" name="startExtent" finished-at="2020-08-30T19:02:47 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cart.CartTest.testItemAddedToCartWithoutGoingIntoCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:47 PDT" name="getInit" finished-at="2020-08-30T19:02:47 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testItemAddedToCartWithoutGoingIntoCart()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:47 PDT" name="testItemAddedToCartWithoutGoingIntoCart" finished-at="2020-08-30T19:02:53 PDT" duration-ms="5869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItemAddedToCartWithoutGoingIntoCart -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:53 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:02:54 PDT" duration-ms="930" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testItemAddedToCartWithoutGoingIntoCart status=SUCCESS method=CartTest.testItemAddedToCartWithoutGoingIntoCart()[pri:0, instance:cart.CartTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:54 PDT" name="cleanUp" finished-at="2020-08-30T19:02:54 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:02:54 PDT" name="setUp" finished-at="2020-08-30T19:03:00 PDT" duration-ms="5881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:03:00 PDT" name="startExtent" finished-at="2020-08-30T19:03:00 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cart.CartTest.testItemDeletedFromCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:03:00 PDT" name="getInit" finished-at="2020-08-30T19:03:00 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testItemDeletedFromCart()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:03:00 PDT" name="testItemDeletedFromCart" finished-at="2020-08-30T19:03:09 PDT" duration-ms="8799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItemDeletedFromCart -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:03:09 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:03:10 PDT" duration-ms="1054" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testItemDeletedFromCart status=SUCCESS method=CartTest.testItemDeletedFromCart()[pri:0, instance:cart.CartTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:03:10 PDT" name="cleanUp" finished-at="2020-08-30T19:03:10 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:cart.CartTest@45b4c3a9]" started-at="2020-08-30T19:09:33 PDT" name="generateReport" finished-at="2020-08-30T19:09:33 PDT" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- cart.CartTest -->
      <class name="registration.RegistrationPageTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:13 PDT" name="setUp" finished-at="2020-08-30T19:06:19 PDT" duration-ms="5518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:19 PDT" name="startExtent" finished-at="2020-08-30T19:06:19 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void registration.RegistrationPageTest.testPasswordMustBeAtLeast6CharacterAlertSignIsEnabled()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:19 PDT" name="getInit" finished-at="2020-08-30T19:06:19 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testPasswordMustBeAtLeast6CharacterAlertSignIsEnabled()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:19 PDT" name="testPasswordMustBeAtLeast6CharacterAlertSignIsEnabled" finished-at="2020-08-30T19:06:22 PDT" duration-ms="3011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordMustBeAtLeast6CharacterAlertSignIsEnabled -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:22 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:06:23 PDT" duration-ms="1324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPasswordMustBeAtLeast6CharacterAlertSignIsEnabled status=SUCCESS method=RegistrationPageTest.testPasswordMustBeAtLeast6CharacterAlertSignIsEnabled()[pri:0, instance:registration.RegistrationPageTest@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:23 PDT" name="cleanUp" finished-at="2020-08-30T19:06:23 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:23 PDT" name="setUp" finished-at="2020-08-30T19:06:29 PDT" duration-ms="5703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:29 PDT" name="startExtent" finished-at="2020-08-30T19:06:29 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void registration.RegistrationPageTest.testVerifyClickStartHere()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:29 PDT" name="getInit" finished-at="2020-08-30T19:06:29 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyClickStartHere()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:29 PDT" name="testVerifyClickStartHere" finished-at="2020-08-30T19:06:30 PDT" duration-ms="1457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyClickStartHere -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:30 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:06:31 PDT" duration-ms="987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyClickStartHere status=SUCCESS method=RegistrationPageTest.testVerifyClickStartHere()[pri:0, instance:registration.RegistrationPageTest@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:31 PDT" name="setUp" finished-at="2020-08-30T19:06:38 PDT" duration-ms="6325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:31 PDT" name="cleanUp" finished-at="2020-08-30T19:06:31 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:38 PDT" name="getInit" finished-at="2020-08-30T19:06:38 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:38 PDT" name="startExtent" finished-at="2020-08-30T19:06:38 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void registration.RegistrationPageTest.testVerifyEnterAValidEmailAddressAlertSignIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testVerifyEnterAValidEmailAddressAlertSignIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:38 PDT" name="testVerifyEnterAValidEmailAddressAlertSignIsDisplayed" finished-at="2020-08-30T19:06:42 PDT" duration-ms="4078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyEnterAValidEmailAddressAlertSignIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:42 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:06:43 PDT" duration-ms="819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyEnterAValidEmailAddressAlertSignIsDisplayed status=SUCCESS method=RegistrationPageTest.testVerifyEnterAValidEmailAddressAlertSignIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:43 PDT" name="cleanUp" finished-at="2020-08-30T19:06:43 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:43 PDT" name="setUp" finished-at="2020-08-30T19:06:48 PDT" duration-ms="5453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:48 PDT" name="startExtent" finished-at="2020-08-30T19:06:48 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void registration.RegistrationPageTest.testVerifyEnterYourEmailAlertSignIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:48 PDT" name="getInit" finished-at="2020-08-30T19:06:48 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyEnterYourEmailAlertSignIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:48 PDT" name="testVerifyEnterYourEmailAlertSignIsDisplayed" finished-at="2020-08-30T19:06:51 PDT" duration-ms="2842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyEnterYourEmailAlertSignIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:51 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:06:52 PDT" duration-ms="932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyEnterYourEmailAlertSignIsDisplayed status=SUCCESS method=RegistrationPageTest.testVerifyEnterYourEmailAlertSignIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:52 PDT" name="cleanUp" finished-at="2020-08-30T19:06:52 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:52 PDT" name="setUp" finished-at="2020-08-30T19:06:59 PDT" duration-ms="6720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:59 PDT" name="getInit" finished-at="2020-08-30T19:06:59 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:59 PDT" name="startExtent" finished-at="2020-08-30T19:06:59 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void registration.RegistrationPageTest.testVerifyEnterYourNameAlertSignIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testVerifyEnterYourNameAlertSignIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:06:59 PDT" name="testVerifyEnterYourNameAlertSignIsDisplayed" finished-at="2020-08-30T19:07:02 PDT" duration-ms="3280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyEnterYourNameAlertSignIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:02 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:07:03 PDT" duration-ms="886" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyEnterYourNameAlertSignIsDisplayed status=SUCCESS method=RegistrationPageTest.testVerifyEnterYourNameAlertSignIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:03 PDT" name="cleanUp" finished-at="2020-08-30T19:07:03 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:03 PDT" name="setUp" finished-at="2020-08-30T19:07:09 PDT" duration-ms="6702" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:09 PDT" name="startExtent" finished-at="2020-08-30T19:07:09 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void registration.RegistrationPageTest.testVerifyEnterYourPasswordAlertSignIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:09 PDT" name="getInit" finished-at="2020-08-30T19:07:09 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyEnterYourPasswordAlertSignIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:09 PDT" name="testVerifyEnterYourPasswordAlertSignIsDisplayed" finished-at="2020-08-30T19:07:12 PDT" duration-ms="2546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyEnterYourPasswordAlertSignIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:12 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:07:13 PDT" duration-ms="917" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyEnterYourPasswordAlertSignIsDisplayed status=SUCCESS method=RegistrationPageTest.testVerifyEnterYourPasswordAlertSignIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:13 PDT" name="setUp" finished-at="2020-08-30T19:07:18 PDT" duration-ms="5457" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:13 PDT" name="cleanUp" finished-at="2020-08-30T19:07:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:18 PDT" name="startExtent" finished-at="2020-08-30T19:07:18 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void registration.RegistrationPageTest.testVerifyPasswordsMustMatchAlertIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:18 PDT" name="getInit" finished-at="2020-08-30T19:07:18 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyPasswordsMustMatchAlertIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:18 PDT" name="testVerifyPasswordsMustMatchAlertIsDisplayed" finished-at="2020-08-30T19:07:21 PDT" duration-ms="2982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyPasswordsMustMatchAlertIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:21 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:07:23 PDT" duration-ms="1338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyPasswordsMustMatchAlertIsDisplayed status=SUCCESS method=RegistrationPageTest.testVerifyPasswordsMustMatchAlertIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:23 PDT" name="cleanUp" finished-at="2020-08-30T19:07:23 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:23 PDT" name="setUp" finished-at="2020-08-30T19:07:29 PDT" duration-ms="6278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:29 PDT" name="startExtent" finished-at="2020-08-30T19:07:29 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void registration.RegistrationPageTest.testVerifyTypeYourPasswordAgainAlertSignIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testVerifyTypeYourPasswordAgainAlertSignIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:29 PDT" name="testVerifyTypeYourPasswordAgainAlertSignIsDisplayed" finished-at="2020-08-30T19:07:32 PDT" duration-ms="2587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyTypeYourPasswordAgainAlertSignIsDisplayed -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:29 PDT" name="getInit" finished-at="2020-08-30T19:07:29 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:32 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:07:32 PDT" duration-ms="889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyTypeYourPasswordAgainAlertSignIsDisplayed status=SUCCESS method=RegistrationPageTest.testVerifyTypeYourPasswordAgainAlertSignIsDisplayed()[pri:0, instance:registration.RegistrationPageTest@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:registration.RegistrationPageTest@291caca8]" started-at="2020-08-30T19:07:32 PDT" name="cleanUp" finished-at="2020-08-30T19:07:32 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- registration.RegistrationPageTest -->
      <class name="search.SearchTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:32 PDT" name="setUp" finished-at="2020-08-30T19:07:38 PDT" duration-ms="5866" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:38 PDT" name="getInit" finished-at="2020-08-30T19:07:38 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:38 PDT" name="startExtent" finished-at="2020-08-30T19:07:38 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testSearchMultipleItems()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testSearchMultipleItems()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:38 PDT" name="testSearchMultipleItems" finished-at="2020-08-30T19:07:46 PDT" duration-ms="7404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchMultipleItems -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:46 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:07:47 PDT" duration-ms="1028" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchMultipleItems status=SUCCESS method=SearchTest.testSearchMultipleItems()[pri:0, instance:search.SearchTest@385e9564] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:47 PDT" name="cleanUp" finished-at="2020-08-30T19:07:47 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:47 PDT" name="setUp" finished-at="2020-08-30T19:07:52 PDT" duration-ms="5383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:52 PDT" name="startExtent" finished-at="2020-08-30T19:07:52 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testSearchSingleItem()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:52 PDT" name="getInit" finished-at="2020-08-30T19:07:52 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testSearchSingleItem()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:52 PDT" name="testSearchSingleItem" finished-at="2020-08-30T19:07:56 PDT" duration-ms="3980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchSingleItem -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:56 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:07:58 PDT" duration-ms="1434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchSingleItem status=SUCCESS method=SearchTest.testSearchSingleItem()[pri:0, instance:search.SearchTest@385e9564] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:58 PDT" name="cleanUp" finished-at="2020-08-30T19:07:58 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:07:58 PDT" name="setUp" finished-at="2020-08-30T19:08:03 PDT" duration-ms="5191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:03 PDT" name="startExtent" finished-at="2020-08-30T19:08:03 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testValidateAllDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:03 PDT" name="getInit" finished-at="2020-08-30T19:08:03 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testValidateAllDropDown()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:03 PDT" name="testValidateAllDropDown" finished-at="2020-08-30T19:08:04 PDT" duration-ms="1091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateAllDropDown -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:04 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:08:05 PDT" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateAllDropDown status=SUCCESS method=SearchTest.testValidateAllDropDown()[pri:0, instance:search.SearchTest@385e9564] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:05 PDT" name="cleanUp" finished-at="2020-08-30T19:08:05 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:05 PDT" name="setUp" finished-at="2020-08-30T19:08:10 PDT" duration-ms="5553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:10 PDT" name="startExtent" finished-at="2020-08-30T19:08:10 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testVerifySearchRandomBooksByTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:10 PDT" name="getInit" finished-at="2020-08-30T19:08:10 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifySearchRandomBooksByTitle()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:10 PDT" name="testVerifySearchRandomBooksByTitle" finished-at="2020-08-30T19:08:17 PDT" duration-ms="6530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifySearchRandomBooksByTitle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:17 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:08:18 PDT" duration-ms="950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifySearchRandomBooksByTitle status=SUCCESS method=SearchTest.testVerifySearchRandomBooksByTitle()[pri:0, instance:search.SearchTest@385e9564] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:18 PDT" name="setUp" finished-at="2020-08-30T19:08:24 PDT" duration-ms="5723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:18 PDT" name="cleanUp" finished-at="2020-08-30T19:08:18 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:24 PDT" name="getInit" finished-at="2020-08-30T19:08:24 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:24 PDT" name="startExtent" finished-at="2020-08-30T19:08:24 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testVerifySearchRandomBooksByURL()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testVerifySearchRandomBooksByURL()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:24 PDT" name="testVerifySearchRandomBooksByURL" finished-at="2020-08-30T19:08:28 PDT" duration-ms="4923" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://www.amazon.com/s?k=The+Needle's+Eye&i=stripbooks-intl-ship&ref=nb_sb_noss] but found [https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Dstripbooks-intl-ship&field-keywords=The+Needle%27s+Eye]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://www.amazon.com/s?k=The+Needle's+Eye&i=stripbooks-intl-ship&ref=nb_sb_noss] but found [https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Dstripbooks-intl-ship&field-keywords=The+Needle%27s+Eye]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at search.Search.verifySearchRandomBookByURL(Search.java:239)
at search.SearchTest.testVerifySearchRandomBooksByURL(SearchTest.java:69)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:136)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:145)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifySearchRandomBooksByURL -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:28 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:08:31 PDT" duration-ms="2311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifySearchRandomBooksByURL status=FAILURE method=SearchTest.testVerifySearchRandomBooksByURL()[pri:0, instance:search.SearchTest@385e9564] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@385e9564]" started-at="2020-08-30T19:08:31 PDT" name="cleanUp" finished-at="2020-08-30T19:08:31 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- search.SearchTest -->
      <class name="home.HomePageTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:10 PDT" name="setUp" finished-at="2020-08-30T19:03:15 PDT" duration-ms="5253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:15 PDT" name="startExtent" finished-at="2020-08-30T19:03:15 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testValidateClickCustomerServiceTabByText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:15 PDT" name="getInit" finished-at="2020-08-30T19:03:15 PDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testValidateClickCustomerServiceTabByText()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:15 PDT" name="testValidateClickCustomerServiceTabByText" finished-at="2020-08-30T19:03:17 PDT" duration-ms="2197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateClickCustomerServiceTabByText -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:17 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:03:20 PDT" duration-ms="2398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateClickCustomerServiceTabByText status=SUCCESS method=HomePageTest.testValidateClickCustomerServiceTabByText()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:20 PDT" name="cleanUp" finished-at="2020-08-30T19:03:20 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:20 PDT" name="setUp" finished-at="2020-08-30T19:03:25 PDT" duration-ms="5429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:25 PDT" name="getInit" finished-at="2020-08-30T19:03:25 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:25 PDT" name="startExtent" finished-at="2020-08-30T19:03:25 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testValidateClickGiftCardsTabByTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testValidateClickGiftCardsTabByTitle()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:25 PDT" name="testValidateClickGiftCardsTabByTitle" finished-at="2020-08-30T19:03:28 PDT" duration-ms="2403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateClickGiftCardsTabByTitle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:28 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:03:29 PDT" duration-ms="1089" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateClickGiftCardsTabByTitle status=SUCCESS method=HomePageTest.testValidateClickGiftCardsTabByTitle()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:29 PDT" name="cleanUp" finished-at="2020-08-30T19:03:29 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:29 PDT" name="setUp" finished-at="2020-08-30T19:03:34 PDT" duration-ms="5207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:34 PDT" name="startExtent" finished-at="2020-08-30T19:03:34 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testValidateClickRegistryTabByTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:34 PDT" name="getInit" finished-at="2020-08-30T19:03:34 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testValidateClickRegistryTabByTitle()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:34 PDT" name="testValidateClickRegistryTabByTitle" finished-at="2020-08-30T19:03:36 PDT" duration-ms="1947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateClickRegistryTabByTitle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:36 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:03:37 PDT" duration-ms="946" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateClickRegistryTabByTitle status=SUCCESS method=HomePageTest.testValidateClickRegistryTabByTitle()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:37 PDT" name="cleanUp" finished-at="2020-08-30T19:03:37 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:37 PDT" name="setUp" finished-at="2020-08-30T19:03:44 PDT" duration-ms="7377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:44 PDT" name="startExtent" finished-at="2020-08-30T19:03:44 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testValidateHomePageTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testValidateHomePageTitle()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:44 PDT" name="testValidateHomePageTitle" finished-at="2020-08-30T19:03:44 PDT" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateHomePageTitle -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:44 PDT" name="getInit" finished-at="2020-08-30T19:03:44 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:44 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:03:45 PDT" duration-ms="897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateHomePageTitle status=SUCCESS method=HomePageTest.testValidateHomePageTitle()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:45 PDT" name="cleanUp" finished-at="2020-08-30T19:03:45 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:45 PDT" name="setUp" finished-at="2020-08-30T19:03:53 PDT" duration-ms="8343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:53 PDT" name="getInit" finished-at="2020-08-30T19:03:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:53 PDT" name="startExtent" finished-at="2020-08-30T19:03:53 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testValidateNavigateToComputersAndTabletsWithShopByCategoryHamburger()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testValidateNavigateToComputersAndTabletsWithShopByCategoryHamburger()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:03:53 PDT" name="testValidateNavigateToComputersAndTabletsWithShopByCategoryHamburger" finished-at="2020-08-30T19:04:05 PDT" duration-ms="11496" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=85.0.4183.83)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-F15B8L7', ip: '169.254.252.52', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\Shakir\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:3129}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 2be06ad8f86297421095294f113cc054]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=85.0.4183.83)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-F15B8L7', ip: '169.254.252.52', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\Shakir\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:3129}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 2be06ad8f86297421095294f113cc054
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at home.HomePage.clickOnComputerAndTabletsInShopByCategoryHamburger(HomePage.java:290)
at home.HomePage.navigateToComputersAndTabletsWithShopByCategoryHamburger(HomePage.java:301)
at home.HomePageTest.testValidateNavigateToComputersAndTabletsWithShopByCategoryHamburger(HomePageTest.java:108)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:136)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:145)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateNavigateToComputersAndTabletsWithShopByCategoryHamburger -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:05 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:04:06 PDT" duration-ms="1367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateNavigateToComputersAndTabletsWithShopByCategoryHamburger status=FAILURE method=HomePageTest.testValidateNavigateToComputersAndTabletsWithShopByCategoryHamburger()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:06 PDT" name="cleanUp" finished-at="2020-08-30T19:04:06 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:06 PDT" name="setUp" finished-at="2020-08-30T19:04:12 PDT" duration-ms="5408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:12 PDT" name="startExtent" finished-at="2020-08-30T19:04:12 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testValidateTodaysDealTabByDealsAndPromotionsText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:12 PDT" name="getInit" finished-at="2020-08-30T19:04:12 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testValidateTodaysDealTabByDealsAndPromotionsText()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:12 PDT" name="testValidateTodaysDealTabByDealsAndPromotionsText" finished-at="2020-08-30T19:04:14 PDT" duration-ms="2352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateTodaysDealTabByDealsAndPromotionsText -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:14 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:04:15 PDT" duration-ms="879" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateTodaysDealTabByDealsAndPromotionsText status=SUCCESS method=HomePageTest.testValidateTodaysDealTabByDealsAndPromotionsText()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:15 PDT" name="cleanUp" finished-at="2020-08-30T19:04:15 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:15 PDT" name="setUp" finished-at="2020-08-30T19:04:21 PDT" duration-ms="5676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:21 PDT" name="startExtent" finished-at="2020-08-30T19:04:21 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testValidateTodaysDealTabByTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:21 PDT" name="getInit" finished-at="2020-08-30T19:04:21 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testValidateTodaysDealTabByTitle()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:21 PDT" name="testValidateTodaysDealTabByTitle" finished-at="2020-08-30T19:04:24 PDT" duration-ms="3509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateTodaysDealTabByTitle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:24 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:04:25 PDT" duration-ms="840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateTodaysDealTabByTitle status=SUCCESS method=HomePageTest.testValidateTodaysDealTabByTitle()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:25 PDT" name="cleanUp" finished-at="2020-08-30T19:04:25 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:25 PDT" name="setUp" finished-at="2020-08-30T19:04:31 PDT" duration-ms="5610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:31 PDT" name="startExtent" finished-at="2020-08-30T19:04:31 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testVerifyAmazonMusicByTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:31 PDT" name="getInit" finished-at="2020-08-30T19:04:31 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyAmazonMusicByTitle()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:31 PDT" name="testVerifyAmazonMusicByTitle" finished-at="2020-08-30T19:04:34 PDT" duration-ms="2938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyAmazonMusicByTitle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:34 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:04:34 PDT" duration-ms="931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyAmazonMusicByTitle status=SUCCESS method=HomePageTest.testVerifyAmazonMusicByTitle()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:34 PDT" name="setUp" finished-at="2020-08-30T19:04:40 PDT" duration-ms="5302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:34 PDT" name="cleanUp" finished-at="2020-08-30T19:04:34 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:40 PDT" name="startExtent" finished-at="2020-08-30T19:04:40 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testVerifyClickOnAmazonAdvertisingByText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:40 PDT" name="getInit" finished-at="2020-08-30T19:04:40 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyClickOnAmazonAdvertisingByText()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:40 PDT" name="testVerifyClickOnAmazonAdvertisingByText" finished-at="2020-08-30T19:04:42 PDT" duration-ms="1907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyClickOnAmazonAdvertisingByText -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:42 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:04:43 PDT" duration-ms="1567" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyClickOnAmazonAdvertisingByText status=SUCCESS method=HomePageTest.testVerifyClickOnAmazonAdvertisingByText()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:43 PDT" name="setUp" finished-at="2020-08-30T19:04:49 PDT" duration-ms="5649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:43 PDT" name="cleanUp" finished-at="2020-08-30T19:04:43 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:49 PDT" name="startExtent" finished-at="2020-08-30T19:04:49 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testVerifyClickOnAmazonAdvertisingByTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:49 PDT" name="getInit" finished-at="2020-08-30T19:04:49 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyClickOnAmazonAdvertisingByTitle()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:49 PDT" name="testVerifyClickOnAmazonAdvertisingByTitle" finished-at="2020-08-30T19:04:52 PDT" duration-ms="3400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyClickOnAmazonAdvertisingByTitle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:52 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:04:54 PDT" duration-ms="1470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyClickOnAmazonAdvertisingByTitle status=SUCCESS method=HomePageTest.testVerifyClickOnAmazonAdvertisingByTitle()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:54 PDT" name="cleanUp" finished-at="2020-08-30T19:04:54 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:54 PDT" name="setUp" finished-at="2020-08-30T19:04:59 PDT" duration-ms="5415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:59 PDT" name="startExtent" finished-at="2020-08-30T19:04:59 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testVerifyClickOnAmazonAdvertisingByURL()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:59 PDT" name="getInit" finished-at="2020-08-30T19:04:59 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyClickOnAmazonAdvertisingByURL()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:04:59 PDT" name="testVerifyClickOnAmazonAdvertisingByURL" finished-at="2020-08-30T19:05:02 PDT" duration-ms="2571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyClickOnAmazonAdvertisingByURL -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:02 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:05:03 PDT" duration-ms="1165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyClickOnAmazonAdvertisingByURL status=SUCCESS method=HomePageTest.testVerifyClickOnAmazonAdvertisingByURL()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:03 PDT" name="cleanUp" finished-at="2020-08-30T19:05:03 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:03 PDT" name="setUp" finished-at="2020-08-30T19:05:08 PDT" duration-ms="5392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:08 PDT" name="startExtent" finished-at="2020-08-30T19:05:08 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testVerifyClickOnHPFeaturedBrandSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:08 PDT" name="getInit" finished-at="2020-08-30T19:05:08 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyClickOnHPFeaturedBrandSelection()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:08 PDT" name="testVerifyClickOnHPFeaturedBrandSelection" finished-at="2020-08-30T19:05:12 PDT" duration-ms="4103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyClickOnHPFeaturedBrandSelection -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:12 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:05:13 PDT" duration-ms="985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyClickOnHPFeaturedBrandSelection status=SUCCESS method=HomePageTest.testVerifyClickOnHPFeaturedBrandSelection()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:13 PDT" name="setUp" finished-at="2020-08-30T19:05:18 PDT" duration-ms="4521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:13 PDT" name="cleanUp" finished-at="2020-08-30T19:05:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:18 PDT" name="startExtent" finished-at="2020-08-30T19:05:18 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testVerifyClickOnMusicLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:18 PDT" name="getInit" finished-at="2020-08-30T19:05:18 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyClickOnMusicLink()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:18 PDT" name="testVerifyClickOnMusicLink" finished-at="2020-08-30T19:05:22 PDT" duration-ms="3739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyClickOnMusicLink -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:22 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:05:23 PDT" duration-ms="987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyClickOnMusicLink status=SUCCESS method=HomePageTest.testVerifyClickOnMusicLink()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:23 PDT" name="setUp" finished-at="2020-08-30T19:05:28 PDT" duration-ms="5516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:23 PDT" name="cleanUp" finished-at="2020-08-30T19:05:23 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:28 PDT" name="startExtent" finished-at="2020-08-30T19:05:28 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testVerifyClickOnMusicLinkByTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:28 PDT" name="getInit" finished-at="2020-08-30T19:05:28 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testVerifyClickOnMusicLinkByTitle()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:28 PDT" name="testVerifyClickOnMusicLinkByTitle" finished-at="2020-08-30T19:05:30 PDT" duration-ms="1601" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at home.HomePage.verifyClickOnMusicLinkByTitle(HomePage.java:240)
at home.HomePageTest.testVerifyClickOnMusicLinkByTitle(HomePageTest.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:136)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:145)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyClickOnMusicLinkByTitle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:30 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:05:32 PDT" duration-ms="2481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyClickOnMusicLinkByTitle status=FAILURE method=HomePageTest.testVerifyClickOnMusicLinkByTitle()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:32 PDT" name="cleanUp" finished-at="2020-08-30T19:05:32 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:32 PDT" name="setUp" finished-at="2020-08-30T19:05:38 PDT" duration-ms="5744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:38 PDT" name="getInit" finished-at="2020-08-30T19:05:38 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:38 PDT" name="startExtent" finished-at="2020-08-30T19:05:38 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testVerifyClickOnStartASellingAccount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testVerifyClickOnStartASellingAccount()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:38 PDT" name="testVerifyClickOnStartASellingAccount" finished-at="2020-08-30T19:05:42 PDT" duration-ms="3823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyClickOnStartASellingAccount -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:42 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:05:43 PDT" duration-ms="1004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyClickOnStartASellingAccount status=SUCCESS method=HomePageTest.testVerifyClickOnStartASellingAccount()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:43 PDT" name="setUp" finished-at="2020-08-30T19:05:48 PDT" duration-ms="5117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:43 PDT" name="cleanUp" finished-at="2020-08-30T19:05:43 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:48 PDT" name="getInit" finished-at="2020-08-30T19:05:48 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:48 PDT" name="startExtent" finished-at="2020-08-30T19:05:48 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testVerifySellVerificationTextIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testVerifySellVerificationTextIsDisplayed()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:48 PDT" name="testVerifySellVerificationTextIsDisplayed" finished-at="2020-08-30T19:05:53 PDT" duration-ms="4579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifySellVerificationTextIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:53 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:05:54 PDT" duration-ms="1399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifySellVerificationTextIsDisplayed status=SUCCESS method=HomePageTest.testVerifySellVerificationTextIsDisplayed()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:54 PDT" name="cleanUp" finished-at="2020-08-30T19:05:54 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:54 PDT" name="setUp" finished-at="2020-08-30T19:05:59 PDT" duration-ms="5419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:59 PDT" name="startExtent" finished-at="2020-08-30T19:05:59 PDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testvalidateClickSellTabByTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:59 PDT" name="getInit" finished-at="2020-08-30T19:05:59 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testvalidateClickSellTabByTitle()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:05:59 PDT" name="testvalidateClickSellTabByTitle" finished-at="2020-08-30T19:06:03 PDT" duration-ms="4014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testvalidateClickSellTabByTitle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:06:03 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:06:05 PDT" duration-ms="1188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testvalidateClickSellTabByTitle status=SUCCESS method=HomePageTest.testvalidateClickSellTabByTitle()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:06:05 PDT" name="cleanUp" finished-at="2020-08-30T19:06:05 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:06:05 PDT" name="setUp" finished-at="2020-08-30T19:06:10 PDT" duration-ms="5228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:06:10 PDT" name="startExtent" finished-at="2020-08-30T19:06:10 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.HomePageTest.testverifyClickGiftCardsTabByText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:06:10 PDT" name="getInit" finished-at="2020-08-30T19:06:10 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testverifyClickGiftCardsTabByText()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:06:10 PDT" name="testverifyClickGiftCardsTabByText" finished-at="2020-08-30T19:06:12 PDT" duration-ms="2611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testverifyClickGiftCardsTabByText -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:06:12 PDT" name="afterEachTestMethod" finished-at="2020-08-30T19:06:13 PDT" duration-ms="1000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testverifyClickGiftCardsTabByText status=SUCCESS method=HomePageTest.testverifyClickGiftCardsTabByText()[pri:0, instance:home.HomePageTest@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.HomePageTest@399c4be1]" started-at="2020-08-30T19:06:13 PDT" name="cleanUp" finished-at="2020-08-30T19:06:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- home.HomePageTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
