<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="2" hostname="LAPTOP-9UNDGRQ2" failures="2" tests="29" name="Amazon Home" time="106.808" errors="0" timestamp="2020-09-26T03:58:20 EDT">
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="3.744">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: cannot determine loading status
from disconnected: Unable to receive message from renderer
  (Session info: chrome=85.0.4183.121)
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;LAPTOP-9UNDGRQ2&amp;apos;, ip: &amp;apos;192.168.31.1&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;11.0.7&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\15029\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57716}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 6f9df382dab5e4b272684750029efd2e">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status
from disconnected: Unable to receive message from renderer
  (Session info: chrome=85.0.4183.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-9UNDGRQ2', ip: '192.168.31.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\15029\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57716}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 6f9df382dab5e4b272684750029efd2e
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)
at base.CommonAPI.setUp(CommonAPI.java:149)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
... Removed 39 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.60110710008E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100081E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100083E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100786E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100786E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100786E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100787E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100787E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100788E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100788E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100789E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.60110710079E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.60110710079E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.60110710079E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.60110710079E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100791E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100791E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100791E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100792E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100792E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100792E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100793E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100793E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100793E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100793E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100794E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100794E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100795E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100796E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100796E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100796E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100797E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100797E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100797E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100798E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100798E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.6011071008E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.6011071008E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.6011071008E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100801E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100802E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100802E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100802E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100803E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100803E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100803E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100803E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100804E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100804E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100804E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100804E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100805E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100805E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100805E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100805E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.601107100806E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.601107100806E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="home.HomeTest" name="@BeforeMethod getInit" time="-1.601107100806E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod getInit -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.601107100806E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="search.SearchTest" name="testSearchIphone" time="2.287"/>
  <testcase classname="home.HomeTest" name="allDropDown" time="0.282"/>
  <testcase classname="home.HomeTest" name="amazonHomePageTitle" time="0.042"/>
  <testcase classname="home.HomeTest" name="searchHandSanitizer" time="0.0">
    <failure type="org.testng.TestNGException" message="
Cannot inject @Test annotated Method [searchHandSanitizer] with [interface java.lang.CharSequence].
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [searchHandSanitizer] with [interface java.lang.CharSequence].
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- searchHandSanitizer -->
  <testcase classname="home.HomeTest" name="searchMultipleItems" time="5.657"/>
  <testcase classname="home.HomeTest" name="testAlexaLink" time="0.146"/>
  <testcase classname="home.HomeTest" name="testAlexaLinkTitle" time="1.74"/>
  <testcase classname="home.HomeTest" name="testAmazonAdvertisingTab" time="0.205"/>
  <testcase classname="home.HomeTest" name="testAmazonAdvertisingTitle" time="1.867"/>
  <testcase classname="home.HomeTest" name="testAmazonBusinessLink" time="0.116"/>
  <testcase classname="home.HomeTest" name="testAmazonBusinessTitle" time="2.028"/>
  <testcase classname="home.HomeTest" name="testCardTitle" time="1.8"/>
  <testcase classname="home.HomeTest" name="testCartOrdersTab" time="0.111"/>
  <testcase classname="home.HomeTest" name="testGiftCardTab" time="0.101">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at home.HomeTest.testGiftCardTab(HomeTest.java:100)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- testGiftCardTab -->
  <testcase classname="home.HomeTest" name="testGiftTitle" time="0.0">
    <skipped/>
  </testcase> <!-- testGiftTitle -->
  <testcase classname="home.HomeTest" name="testHelloSignInTab" time="0.0">
    <skipped/>
  </testcase> <!-- testHelloSignInTab -->
  <testcase classname="home.HomeTest" name="testHelloSignInTitle" time="0.0">
    <skipped/>
  </testcase> <!-- testHelloSignInTitle -->
  <testcase classname="home.HomeTest" name="testHelpLink" time="0.0">
    <skipped/>
  </testcase> <!-- testHelpLink -->
  <testcase classname="home.HomeTest" name="testHelpTitle" time="0.0">
    <skipped/>
  </testcase> <!-- testHelpTitle -->
  <testcase classname="home.HomeTest" name="testMusicTitle" time="0.0">
    <skipped/>
  </testcase> <!-- testMusicTitle -->
  <testcase classname="home.HomeTest" name="testMusicsTab" time="0.0">
    <skipped/>
  </testcase> <!-- testMusicsTab -->
  <testcase classname="home.HomeTest" name="testRegistryTab" time="0.0">
    <skipped/>
  </testcase> <!-- testRegistryTab -->
  <testcase classname="home.HomeTest" name="testRegistryTitle" time="0.0">
    <skipped/>
  </testcase> <!-- testRegistryTitle -->
  <testcase classname="home.HomeTest" name="testReturnOrderTitle" time="0.0">
    <skipped/>
  </testcase> <!-- testReturnOrderTitle -->
  <testcase classname="home.HomeTest" name="testReturnOrdersTab" time="0.0">
    <skipped/>
  </testcase> <!-- testReturnOrdersTab -->
  <testcase classname="home.HomeTest" name="testSellTab" time="0.0">
    <skipped/>
  </testcase> <!-- testSellTab -->
  <testcase classname="home.HomeTest" name="testSellTitle" time="0.0">
    <skipped/>
  </testcase> <!-- testSellTitle -->
  <testcase classname="home.HomeTest" name="testTodaysDealTab" time="0.0">
    <skipped/>
  </testcase> <!-- testTodaysDealTab -->
  <testcase classname="home.HomeTest" name="testTodaysDealTitle" time="0.0">
    <skipped/>
  </testcase> <!-- testTodaysDealTitle -->
  <testcase classname="base.CommonAPI" name="@AfterSuite generateReport" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase classname="base.CommonAPI" name="@BeforeSuite extentSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
</testsuite> <!-- Amazon Home -->
