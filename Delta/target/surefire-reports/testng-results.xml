<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="10" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/farjanamobin/IdeaProjects/WebAutomationFramework_Team1/Delta/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite started-at="2020-09-26T02:31:37 EDT" name="Delta Automation Test" finished-at="2020-09-26T02:34:11 EDT" duration-ms="153031">
    <groups>
    </groups>
    <test started-at="2020-09-26T02:31:37 EDT" name="Delta Home" finished-at="2020-09-26T02:34:11 EDT" duration-ms="153031">
      <class name="home.DeltaHomePageTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:37 EDT" name="extentSetup" finished-at="2020-09-26T02:31:37 EDT" duration-ms="641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@10a98392]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/farjanamobin/IdeaProjects/WebAutomationFramework_Team1/Delta/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:38 EDT" name="setUp" finished-at="2020-09-26T02:31:53 EDT" duration-ms="15955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.delta.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:53 EDT" name="startExtent" finished-at="2020-09-26T02:31:54 EDT" duration-ms="38" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.DeltaHomePageTest.testAndValidateAllStepsOfBooking() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:54 EDT" name="getInit" finished-at="2020-09-26T02:31:54 EDT" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateAllStepsOfBooking()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:31:54 EDT" name="testAndValidateAllStepsOfBooking" finished-at="2020-09-26T02:32:27 EDT" duration-ms="32874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateAllStepsOfBooking -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:27 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:32:27 EDT" duration-ms="915" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateAllStepsOfBooking status=SUCCESS method=DeltaHomePageTest.testAndValidateAllStepsOfBooking()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:27 EDT" name="cleanUp" finished-at="2020-09-26T02:32:27 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:27 EDT" name="setUp" finished-at="2020-09-26T02:32:34 EDT" duration-ms="6521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.delta.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:34 EDT" name="startExtent" finished-at="2020-09-26T02:32:34 EDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.DeltaHomePageTest.testAndValidateCalendar() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:34 EDT" name="getInit" finished-at="2020-09-26T02:32:34 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateCalendar()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:34 EDT" name="testAndValidateCalendar" finished-at="2020-09-26T02:32:39 EDT" duration-ms="5034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateCalendar -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:39 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:32:39 EDT" duration-ms="281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateCalendar status=SUCCESS method=DeltaHomePageTest.testAndValidateCalendar()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:39 EDT" name="cleanUp" finished-at="2020-09-26T02:32:39 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:39 EDT" name="setUp" finished-at="2020-09-26T02:32:47 EDT" duration-ms="8053" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.delta.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:47 EDT" name="startExtent" finished-at="2020-09-26T02:32:47 EDT" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.DeltaHomePageTest.testAndValidateFromTab() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:47 EDT" name="getInit" finished-at="2020-09-26T02:32:47 EDT" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateFromTab()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:47 EDT" name="testAndValidateFromTab" finished-at="2020-09-26T02:32:54 EDT" duration-ms="7047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateFromTab -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:54 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:32:55 EDT" duration-ms="495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateFromTab status=SUCCESS method=DeltaHomePageTest.testAndValidateFromTab()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:55 EDT" name="cleanUp" finished-at="2020-09-26T02:32:55 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:32:55 EDT" name="setUp" finished-at="2020-09-26T02:33:02 EDT" duration-ms="7079" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.delta.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:02 EDT" name="startExtent" finished-at="2020-09-26T02:33:02 EDT" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.DeltaHomePageTest.testAndValidateHomepageCheckBoxes() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:02 EDT" name="getInit" finished-at="2020-09-26T02:33:02 EDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateHomepageCheckBoxes()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:02 EDT" name="testAndValidateHomepageCheckBoxes" finished-at="2020-09-26T02:33:08 EDT" duration-ms="5988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateHomepageCheckBoxes -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:08 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:33:08 EDT" duration-ms="265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateHomepageCheckBoxes status=SUCCESS method=DeltaHomePageTest.testAndValidateHomepageCheckBoxes()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:08 EDT" name="cleanUp" finished-at="2020-09-26T02:33:08 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:08 EDT" name="setUp" finished-at="2020-09-26T02:33:18 EDT" duration-ms="9640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.delta.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:18 EDT" name="startExtent" finished-at="2020-09-26T02:33:18 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.DeltaHomePageTest.testAndValidateNeedHelpDropDownTab() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:18 EDT" name="getInit" finished-at="2020-09-26T02:33:18 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateNeedHelpDropDownTab()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:18 EDT" name="testAndValidateNeedHelpDropDownTab" finished-at="2020-09-26T02:33:20 EDT" duration-ms="2013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateNeedHelpDropDownTab -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:20 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:33:20 EDT" duration-ms="204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateNeedHelpDropDownTab status=SUCCESS method=DeltaHomePageTest.testAndValidateNeedHelpDropDownTab()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:20 EDT" name="cleanUp" finished-at="2020-09-26T02:33:20 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:20 EDT" name="setUp" finished-at="2020-09-26T02:33:26 EDT" duration-ms="5832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.delta.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:26 EDT" name="startExtent" finished-at="2020-09-26T02:33:26 EDT" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.DeltaHomePageTest.testAndValidateNumberOfPassangers() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:26 EDT" name="getInit" finished-at="2020-09-26T02:33:26 EDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateNumberOfPassangers()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:26 EDT" name="testAndValidateNumberOfPassangers" finished-at="2020-09-26T02:33:29 EDT" duration-ms="2952" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateNumberOfPassangers -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:29 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:33:29 EDT" duration-ms="284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateNumberOfPassangers status=SUCCESS method=DeltaHomePageTest.testAndValidateNumberOfPassangers()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:29 EDT" name="cleanUp" finished-at="2020-09-26T02:33:29 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:29 EDT" name="setUp" finished-at="2020-09-26T02:33:41 EDT" duration-ms="11562" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.delta.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:41 EDT" name="startExtent" finished-at="2020-09-26T02:33:41 EDT" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.DeltaHomePageTest.testAndValidateSkyMilesDropDownTab() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:41 EDT" name="getInit" finished-at="2020-09-26T02:33:41 EDT" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateSkyMilesDropDownTab()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:41 EDT" name="testAndValidateSkyMilesDropDownTab" finished-at="2020-09-26T02:33:44 EDT" duration-ms="3412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateSkyMilesDropDownTab -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:44 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:33:45 EDT" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateSkyMilesDropDownTab status=SUCCESS method=DeltaHomePageTest.testAndValidateSkyMilesDropDownTab()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:45 EDT" name="cleanUp" finished-at="2020-09-26T02:33:45 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:45 EDT" name="setUp" finished-at="2020-09-26T02:33:50 EDT" duration-ms="5137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.delta.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:50 EDT" name="startExtent" finished-at="2020-09-26T02:33:50 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.DeltaHomePageTest.testAndValidateToTab() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:50 EDT" name="getInit" finished-at="2020-09-26T02:33:50 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateToTab()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:50 EDT" name="testAndValidateToTab" finished-at="2020-09-26T02:33:53 EDT" duration-ms="3392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateToTab -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:53 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:33:53 EDT" duration-ms="212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateToTab status=SUCCESS method=DeltaHomePageTest.testAndValidateToTab()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:53 EDT" name="cleanUp" finished-at="2020-09-26T02:33:53 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:53 EDT" name="setUp" finished-at="2020-09-26T02:33:59 EDT" duration-ms="5329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.delta.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:59 EDT" name="startExtent" finished-at="2020-09-26T02:33:59 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.DeltaHomePageTest.testAndValidateTravleInfoDropDownTab() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:59 EDT" name="getInit" finished-at="2020-09-26T02:33:59 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateTravleInfoDropDownTab()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:33:59 EDT" name="testAndValidateTravleInfoDropDownTab" finished-at="2020-09-26T02:34:01 EDT" duration-ms="2148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateTravleInfoDropDownTab -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:34:01 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:34:01 EDT" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateTravleInfoDropDownTab status=SUCCESS method=DeltaHomePageTest.testAndValidateTravleInfoDropDownTab()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:34:01 EDT" name="cleanUp" finished-at="2020-09-26T02:34:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:34:01 EDT" name="setUp" finished-at="2020-09-26T02:34:08 EDT" duration-ms="7026" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.delta.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:34:08 EDT" name="startExtent" finished-at="2020-09-26T02:34:08 EDT" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.DeltaHomePageTest.testAndValidateTripWay() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:34:08 EDT" name="getInit" finished-at="2020-09-26T02:34:08 EDT" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAndValidateTripWay()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:34:08 EDT" name="testAndValidateTripWay" finished-at="2020-09-26T02:34:10 EDT" duration-ms="2071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndValidateTripWay -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:34:10 EDT" name="afterEachTestMethod" finished-at="2020-09-26T02:34:10 EDT" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAndValidateTripWay status=SUCCESS method=DeltaHomePageTest.testAndValidateTripWay()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:34:10 EDT" name="cleanUp" finished-at="2020-09-26T02:34:10 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:home.DeltaHomePageTest@6a03bcb1]" started-at="2020-09-26T02:34:11 EDT" name="generateReport" finished-at="2020-09-26T02:34:11 EDT" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- home.DeltaHomePageTest -->
    </test> <!-- Delta Home -->
  </suite> <!-- Delta Automation Test -->
</testng-results>
