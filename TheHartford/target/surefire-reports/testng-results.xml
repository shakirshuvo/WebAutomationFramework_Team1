<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="15" failed="5" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/syedraza/IdeaProjects/WebAutomationFramework_Team1/TheHartford/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite started-at="2020-09-25T13:12:38 MDT" name="The Hartford Automation Test" finished-at="2020-09-25T13:14:54 MDT" duration-ms="136541">
    <groups>
    </groups>
    <test started-at="2020-09-25T13:12:38 MDT" name="The Hartford Home" finished-at="2020-09-25T13:14:54 MDT" duration-ms="136541">
      <class name="search.SearchTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:38 MDT" name="extentSetup" finished-at="2020-09-25T13:12:38 MDT" duration-ms="420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@469a7575]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/syedraza/IdeaProjects/WebAutomationFramework_Team1/TheHartford/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:38 MDT" name="setUp" finished-at="2020-09-25T13:12:45 MDT" duration-ms="7272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:45 MDT" name="startExtent" finished-at="2020-09-25T13:12:45 MDT" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.TestContactUs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:45 MDT" name="getInit" finished-at="2020-09-25T13:12:45 MDT" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="TestContactUs()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:45 MDT" name="TestContactUs" finished-at="2020-09-25T13:12:47 MDT" duration-ms="1226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestContactUs -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:47 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:12:47 MDT" duration-ms="632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestContactUs status=SUCCESS method=SearchTest.TestContactUs()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:47 MDT" name="cleanUp" finished-at="2020-09-25T13:12:47 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:47 MDT" name="setUp" finished-at="2020-09-25T13:12:52 MDT" duration-ms="4762" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:52 MDT" name="startExtent" finished-at="2020-09-25T13:12:52 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testAboutUs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:52 MDT" name="getInit" finished-at="2020-09-25T13:12:52 MDT" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAboutUs()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:52 MDT" name="testAboutUs" finished-at="2020-09-25T13:12:57 MDT" duration-ms="5180" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@title='About Us']"}
  (Session info: chrome=85.0.4183.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Syeds-MBP.ed.shawcable.net', ip: '2604:3d09:6e80:4500:b149:4cb2:5195:3c4e%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '11.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: /var/folders/xh/fygjm06s7q9...}, goog:chromeOptions: {debuggerAddress: localhost:62990}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: cd4209eee7e12be5e1e6217cc8934840
*** Element info: {Using=xpath, value=//a[@title='About Us']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@title='About Us']"}
  (Session info: chrome=85.0.4183.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Syeds-MBP.ed.shawcable.net', ip: '2604:3d09:6e80:4500:b149:4cb2:5195:3c4e%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '11.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: /var/folders/xh/fygjm06s7q9...}, goog:chromeOptions: {debuggerAddress: localhost:62990}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: cd4209eee7e12be5e1e6217cc8934840
*** Element info: {Using=xpath, value=//a[@title='About Us']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at search.Search.findAboutUs(Search.java:187)
at search.SearchTest.testAboutUs(SearchTest.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAboutUs -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:57 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:12:58 MDT" duration-ms="1259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAboutUs status=FAILURE method=SearchTest.testAboutUs()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:58 MDT" name="cleanUp" finished-at="2020-09-25T13:12:58 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:12:58 MDT" name="setUp" finished-at="2020-09-25T13:13:05 MDT" duration-ms="6269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:05 MDT" name="startExtent" finished-at="2020-09-25T13:13:05 MDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testAccessStat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:05 MDT" name="getInit" finished-at="2020-09-25T13:13:05 MDT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAccessStat()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:05 MDT" name="testAccessStat" finished-at="2020-09-25T13:13:06 MDT" duration-ms="1379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccessStat -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:06 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:13:06 MDT" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccessStat status=SUCCESS method=SearchTest.testAccessStat()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:06 MDT" name="cleanUp" finished-at="2020-09-25T13:13:06 MDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:06 MDT" name="setUp" finished-at="2020-09-25T13:13:11 MDT" duration-ms="4430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:11 MDT" name="startExtent" finished-at="2020-09-25T13:13:11 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testAgentAndProducers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:11 MDT" name="getInit" finished-at="2020-09-25T13:13:11 MDT" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAgentAndProducers()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:11 MDT" name="testAgentAndProducers" finished-at="2020-09-25T13:13:13 MDT" duration-ms="2022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAgentAndProducers -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:13 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:13:13 MDT" duration-ms="210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAgentAndProducers status=SUCCESS method=SearchTest.testAgentAndProducers()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:13 MDT" name="cleanUp" finished-at="2020-09-25T13:13:13 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:13 MDT" name="setUp" finished-at="2020-09-25T13:13:17 MDT" duration-ms="4133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:17 MDT" name="startExtent" finished-at="2020-09-25T13:13:17 MDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testBusinessTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:17 MDT" name="getInit" finished-at="2020-09-25T13:13:17 MDT" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testBusinessTab()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:17 MDT" name="testBusinessTab" finished-at="2020-09-25T13:13:19 MDT" duration-ms="1759" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Business, Home & Car Insurance Quotes | The Hartford Insurance] but found [Business Insurance | Insurance for Business Owners | The Hartford]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Business, Home & Car Insurance Quotes | The Hartford Insurance] but found [Business Insurance | Insurance for Business Owners | The Hartford]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at search.Search.validateBusinessTab(Search.java:149)
at search.SearchTest.testBusinessTab(SearchTest.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBusinessTab -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:19 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:13:23 MDT" duration-ms="3787" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBusinessTab status=FAILURE method=SearchTest.testBusinessTab()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:23 MDT" name="cleanUp" finished-at="2020-09-25T13:13:23 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:23 MDT" name="setUp" finished-at="2020-09-25T13:13:29 MDT" duration-ms="5960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:29 MDT" name="startExtent" finished-at="2020-09-25T13:13:29 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testCarInsurance()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:29 MDT" name="getInit" finished-at="2020-09-25T13:13:29 MDT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testCarInsurance()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:29 MDT" name="testCarInsurance" finished-at="2020-09-25T13:13:34 MDT" duration-ms="5178" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=85.0.4183.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Syeds-MBP.ed.shawcable.net', ip: '2604:3d09:6e80:4500:b149:4cb2:5195:3c4e%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '11.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: /var/folders/xh/fygjm06s7q9...}, goog:chromeOptions: {debuggerAddress: localhost:63346}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 0cbc13963e771f5200c42a9f263fa33a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=85.0.4183.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Syeds-MBP.ed.shawcable.net', ip: '2604:3d09:6e80:4500:b149:4cb2:5195:3c4e%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '11.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: /var/folders/xh/fygjm06s7q9...}, goog:chromeOptions: {debuggerAddress: localhost:63346}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 0cbc13963e771f5200c42a9f263fa33a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at search.Search.carInsuranceCheck(Search.java:378)
at search.SearchTest.testCarInsurance(SearchTest.java:174)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCarInsurance -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:34 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:13:35 MDT" duration-ms="1297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCarInsurance status=FAILURE method=SearchTest.testCarInsurance()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:35 MDT" name="cleanUp" finished-at="2020-09-25T13:13:35 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:35 MDT" name="setUp" finished-at="2020-09-25T13:13:40 MDT" duration-ms="4345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:40 MDT" name="startExtent" finished-at="2020-09-25T13:13:40 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testEEO()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:40 MDT" name="getInit" finished-at="2020-09-25T13:13:40 MDT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testEEO()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:40 MDT" name="testEEO" finished-at="2020-09-25T13:13:41 MDT" duration-ms="1557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEEO -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:41 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:13:41 MDT" duration-ms="160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEEO status=SUCCESS method=SearchTest.testEEO()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:41 MDT" name="cleanUp" finished-at="2020-09-25T13:13:41 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:41 MDT" name="setUp" finished-at="2020-09-25T13:13:45 MDT" duration-ms="3558" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:45 MDT" name="startExtent" finished-at="2020-09-25T13:13:45 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testEmployeeBanifits()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:45 MDT" name="getInit" finished-at="2020-09-25T13:13:45 MDT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testEmployeeBanifits()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:45 MDT" name="testEmployeeBanifits" finished-at="2020-09-25T13:13:46 MDT" duration-ms="1052" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Business, Home & Car Insurance Quotes | The Hartford Insurance] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Business, Home & Car Insurance Quotes | The Hartford Insurance] but found []
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at search.Search.validateEmpBanifits(Search.java:166)
at search.SearchTest.testEmployeeBanifits(SearchTest.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmployeeBanifits -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:46 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:13:48 MDT" duration-ms="2361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmployeeBanifits status=FAILURE method=SearchTest.testEmployeeBanifits()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:48 MDT" name="cleanUp" finished-at="2020-09-25T13:13:48 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:48 MDT" name="setUp" finished-at="2020-09-25T13:13:52 MDT" duration-ms="3864" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:52 MDT" name="startExtent" finished-at="2020-09-25T13:13:52 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testFeedBack()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:52 MDT" name="getInit" finished-at="2020-09-25T13:13:52 MDT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testFeedBack()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:52 MDT" name="testFeedBack" finished-at="2020-09-25T13:13:55 MDT" duration-ms="3346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFeedBack -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:55 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:13:56 MDT" duration-ms="155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFeedBack status=SUCCESS method=SearchTest.testFeedBack()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:56 MDT" name="setUp" finished-at="2020-09-25T13:14:00 MDT" duration-ms="4307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:13:56 MDT" name="cleanUp" finished-at="2020-09-25T13:13:56 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:00 MDT" name="startExtent" finished-at="2020-09-25T13:14:00 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testFindAnAgentButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:00 MDT" name="getInit" finished-at="2020-09-25T13:14:00 MDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testFindAnAgentButton()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:00 MDT" name="testFindAnAgentButton" finished-at="2020-09-25T13:14:01 MDT" duration-ms="1302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAnAgentButton -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:01 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:14:01 MDT" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFindAnAgentButton status=SUCCESS method=SearchTest.testFindAnAgentButton()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:01 MDT" name="cleanUp" finished-at="2020-09-25T13:14:01 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:01 MDT" name="setUp" finished-at="2020-09-25T13:14:05 MDT" duration-ms="3895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:05 MDT" name="startExtent" finished-at="2020-09-25T13:14:05 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testHomeInsurance()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:05 MDT" name="getInit" finished-at="2020-09-25T13:14:05 MDT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testHomeInsurance()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:05 MDT" name="testHomeInsurance" finished-at="2020-09-25T13:14:06 MDT" duration-ms="1189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomeInsurance -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:06 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:14:07 MDT" duration-ms="121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHomeInsurance status=SUCCESS method=SearchTest.testHomeInsurance()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:07 MDT" name="cleanUp" finished-at="2020-09-25T13:14:07 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:07 MDT" name="setUp" finished-at="2020-09-25T13:14:09 MDT" duration-ms="2893" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:09 MDT" name="startExtent" finished-at="2020-09-25T13:14:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testHomeTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:09 MDT" name="getInit" finished-at="2020-09-25T13:14:09 MDT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testHomeTab()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:09 MDT" name="testHomeTab" finished-at="2020-09-25T13:14:11 MDT" duration-ms="1233" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Business, Home & Car Insurance Quotes | The Hartford Insurance] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Business, Home & Car Insurance Quotes | The Hartford Insurance] but found []
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at search.Search.validateSetHomeElementCheck(Search.java:132)
at search.SearchTest.testHomeTab(SearchTest.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomeTab -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:11 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:14:13 MDT" duration-ms="2580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHomeTab status=FAILURE method=SearchTest.testHomeTab()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:13 MDT" name="cleanUp" finished-at="2020-09-25T13:14:13 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:13 MDT" name="setUp" finished-at="2020-09-25T13:14:17 MDT" duration-ms="3989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:17 MDT" name="getInit" finished-at="2020-09-25T13:14:17 MDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:17 MDT" name="startExtent" finished-at="2020-09-25T13:14:17 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testLegalNotice()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLegalNotice()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:17 MDT" name="testLegalNotice" finished-at="2020-09-25T13:14:18 MDT" duration-ms="1067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLegalNotice -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:18 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:14:18 MDT" duration-ms="140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLegalNotice status=SUCCESS method=SearchTest.testLegalNotice()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:18 MDT" name="cleanUp" finished-at="2020-09-25T13:14:18 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:18 MDT" name="setUp" finished-at="2020-09-25T13:14:22 MDT" duration-ms="3507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:22 MDT" name="getInit" finished-at="2020-09-25T13:14:22 MDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:22 MDT" name="startExtent" finished-at="2020-09-25T13:14:22 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testMobileApp()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testMobileApp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:22 MDT" name="testMobileApp" finished-at="2020-09-25T13:14:23 MDT" duration-ms="1243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMobileApp -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:23 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:14:23 MDT" duration-ms="169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMobileApp status=SUCCESS method=SearchTest.testMobileApp()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:23 MDT" name="cleanUp" finished-at="2020-09-25T13:14:23 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:23 MDT" name="setUp" finished-at="2020-09-25T13:14:28 MDT" duration-ms="4497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:28 MDT" name="startExtent" finished-at="2020-09-25T13:14:28 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testPrivacyPolicy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:28 MDT" name="getInit" finished-at="2020-09-25T13:14:28 MDT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testPrivacyPolicy()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:28 MDT" name="testPrivacyPolicy" finished-at="2020-09-25T13:14:29 MDT" duration-ms="912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrivacyPolicy -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:29 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:14:29 MDT" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPrivacyPolicy status=SUCCESS method=SearchTest.testPrivacyPolicy()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:29 MDT" name="cleanUp" finished-at="2020-09-25T13:14:29 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:29 MDT" name="setUp" finished-at="2020-09-25T13:14:32 MDT" duration-ms="3512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:32 MDT" name="startExtent" finished-at="2020-09-25T13:14:32 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testProdCompensation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:32 MDT" name="getInit" finished-at="2020-09-25T13:14:32 MDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testProdCompensation()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:32 MDT" name="testProdCompensation" finished-at="2020-09-25T13:14:33 MDT" duration-ms="876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProdCompensation -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:33 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:14:34 MDT" duration-ms="192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProdCompensation status=SUCCESS method=SearchTest.testProdCompensation()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:34 MDT" name="setUp" finished-at="2020-09-25T13:14:37 MDT" duration-ms="3749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:34 MDT" name="cleanUp" finished-at="2020-09-25T13:14:34 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:37 MDT" name="startExtent" finished-at="2020-09-25T13:14:37 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testReportClaim()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:37 MDT" name="getInit" finished-at="2020-09-25T13:14:37 MDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testReportClaim()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:37 MDT" name="testReportClaim" finished-at="2020-09-25T13:14:39 MDT" duration-ms="1225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReportClaim -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:39 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:14:39 MDT" duration-ms="161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testReportClaim status=SUCCESS method=SearchTest.testReportClaim()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:39 MDT" name="cleanUp" finished-at="2020-09-25T13:14:39 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:39 MDT" name="setUp" finished-at="2020-09-25T13:14:42 MDT" duration-ms="3749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:42 MDT" name="startExtent" finished-at="2020-09-25T13:14:42 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testSearchBoxCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:42 MDT" name="getInit" finished-at="2020-09-25T13:14:42 MDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testSearchBoxCheck()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:42 MDT" name="testSearchBoxCheck" finished-at="2020-09-25T13:14:45 MDT" duration-ms="2872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchBoxCheck -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:45 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:14:45 MDT" duration-ms="167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchBoxCheck status=SUCCESS method=SearchTest.testSearchBoxCheck()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:45 MDT" name="cleanUp" finished-at="2020-09-25T13:14:45 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:45 MDT" name="setUp" finished-at="2020-09-25T13:14:49 MDT" duration-ms="3877" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:49 MDT" name="startExtent" finished-at="2020-09-25T13:14:49 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testSmallBiz()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:49 MDT" name="getInit" finished-at="2020-09-25T13:14:49 MDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testSmallBiz()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:49 MDT" name="testSmallBiz" finished-at="2020-09-25T13:14:50 MDT" duration-ms="629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallBiz -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:50 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:14:50 MDT" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSmallBiz status=SUCCESS method=SearchTest.testSmallBiz()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:50 MDT" name="cleanUp" finished-at="2020-09-25T13:14:50 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:50 MDT" name="setUp" finished-at="2020-09-25T13:14:53 MDT" duration-ms="3319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.thehartford.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:53 MDT" name="getInit" finished-at="2020-09-25T13:14:53 MDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:53 MDT" name="startExtent" finished-at="2020-09-25T13:14:53 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void search.SearchTest.testtheHartFordImage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testtheHartFordImage()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:53 MDT" name="testtheHartFordImage" finished-at="2020-09-25T13:14:54 MDT" duration-ms="860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testtheHartFordImage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:54 MDT" name="afterEachTestMethod" finished-at="2020-09-25T13:14:54 MDT" duration-ms="164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testtheHartFordImage status=SUCCESS method=SearchTest.testtheHartFordImage()[pri:0, instance:search.SearchTest@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:54 MDT" name="cleanUp" finished-at="2020-09-25T13:14:54 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:search.SearchTest@1356d4d4]" started-at="2020-09-25T13:14:55 MDT" name="generateReport" finished-at="2020-09-25T13:14:55 MDT" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- search.SearchTest -->
    </test> <!-- The Hartford Home -->
  </suite> <!-- The Hartford Automation Test -->
</testng-results>
